<?php
/**
 * @file
 * Unit tests for the simple Greeting module.
 */
class dnaGeneratorTestCase extends DrupalUnitTestCase
{
  public static function getInfo()
  {
    //just returns information about the tests in this class.
    return array(
    'name' => 'DNA Generator unit tests',
    'description' => 'Test that dna_generator works properly.',
    'group' => 'Epicodus Examples Tests',
    );
  }

  function testUserInput()
  {
    $description = 'Inputting ATCG should return TAGC.';
    $input = 'ATCG';
    $result = dna_generator($input);
    $expected_output = 'TAGC';
    $this->assertEqual($result, $expected_output, $description);

    $description = 'Inputting atcg should return TAGC.';
    $input = 'atcg';
    $result = dna_generator($input);
    $expected_output = 'TAGC';
    $this->assertEqual($result, $expected_output, $description);

    $description = 'Inputting BD should return a error message.';
    $input = 'BD';
    $result = element_validate_input_letters($input);
    $expected_output = t('DNA nucleotides must only consist of letters A, T, C, or G.');
    $this->assertEqual($result, $expected_output, $description);
  }
}


/**
 * @file
 * Functional tests for the simple Greeting module.
 */
 class GreetingTests extends DrupalWebTestCase {
   /**
    * Controls info displayed about our test in the Drupal Testing UI
    */
     public static function getInfo() {
         return array(
             // Name your tests.
             'name' => 'DNA Generator functional tests',
             // Describe the point of these tests.
             'description' => 'Tests the Dna Generator module.',
             // Assign these tests to a group, just like the "package" in the module's info page puts your modules into a group.
             'group' => 'Epicodus Examples Tests',
         );
     }

     //act
     public function setUp() {
         //enable modules we need by putting their machine readable names into an array.
         parent::setUp(array('dna_generator'));
     }

     /**
      * Perform the tasks we are testing, and assert the result. "Act" and then "Assert".
      */
     //test
     public function testGreetingNavigation() {
         // Navigate to the URL created by the Greeting module.
         $this->drupalGet('dna_generator');
         // Assert that the text we want to see is actually there on the page.
         $this->assertText('DNA Generator', 'The text on the page is correct.');
     }

     public function testFinalOutput() {
         // Navigate to the URL created by the Greeting module.
         $this->drupalGet('dna_generator_success_page');
         // Assert that the text we want to see is actually there on the page.
         $this->assertText('Your input is: ATCG. The output DNA is: TAGC.', 'The output on the page is correct.');
     }

 }
